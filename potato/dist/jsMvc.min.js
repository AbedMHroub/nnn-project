import{analyzeUrl,loadMvc}from"./route.min.js";import{render}from"./templateRenderer.min.js";let viewElement=document.querySelector("[view]");class routeObj{constructor(e,o,u,a){this.title=e,this.controller=c,this.route=r,this.template=t,this.routeParams={}}}export class Mvc{constructor(){this._routeMap=[],this.controller={},this.template={},this.defaultRoute=""}addRoute(t,e,r,o){this._routeMap=this._routeMap.push(new routeObj(t,r,o,e))}addRouteList(t){this._routeMap=this._routeMap.concat(t)}init(){(viewElement=document.querySelector("[view]"))&&(this.defaultRoute={$currentRoute:this._routeMap[Object.getOwnPropertyNames(this._routeMap)[0]]},window.onhashchange=this.update.bind(this),this.update())}update(){(routeObj=analyzeUrl(window.location.href,this._routeMap))||(routeObj=this.defaultRoute),this.routeParams=routeObj.$routeParams,document.title=routeObj.$currentRoute.title,loadMvc(routeObj.$currentRoute.template,routeObj.$currentRoute.controller).then(t=>{viewElement.innerHTML=t.template;let e=new(t.controller[Object.keys(t.controller)[0]]);e.routeParams=this.routeParams,render(viewElement,e)})}clear(){this.controller={},this.template={}}}