export function analyzeUrl(t,e){let o,n=!1,r="",l={},s={},c=(t=t.substr(t.search("#")+2).split("/"))[0];return t.splice(0,1),e.forEach(e=>{o=e.url.substr(e.url.search("/")+1).split("/:"),c==o[0]&&t.length==o.length-1&&(n=!0,r=o[0],o.splice(0,1),l={},o.forEach((e,o)=>{l[e]=t[o]}),s=e)}),0==n?null:{$path:r,$routeParams:l,$currentRoute:s}}async function dynamicImport(t){const e=t;try{return await import(e)}catch(e){return console.log(t+" doesnt exist"),null}}async function loadDoc(t){let e=new Promise((e,o)=>{let n;(n=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP")).onload=function(){e(n.responseText)},n.onerror=(()=>{console.log(t+" doesnt exist"),o()}),n.open("GET",t),n.send()});return await e}export async function loadMvc(t,e){let o,n;return o=await loadDoc(t),n=await dynamicImport(e),Promise.resolve({template:o,controller:n})}